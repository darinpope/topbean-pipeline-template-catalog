@Library("topbean-shared-library") _
def branchName = getEventValue(key:"branchName")
pipeline {
  agent{
    kubernetes {
      label "${projectId}"
      yaml"""
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: sbt
    image: hseeberger/scala-sbt:8u222_1.3.7_2.13.1
    command:
    - cat
    tty: true
    volumeMounts:
    - name: nfs-volume
      mountPath: "/home/jenkins/git"
  - name: jfrog
    image: docker.bintray.io/jfrog/jfrog-cli-go:1.31.0
    command:
    - cat
    tty: true
    volumeMounts:
    - name: nfs-volume
      mountPath: "/home/jenkins/git"
  - name: alpine-zip
    image: kramos/alpine-zip:latest
    command:
    - cat
    tty: true
  volumes:
  - name: nfs-volume
    nfs: 
      server: fs-3215e8b2.efs.us-east-1.amazonaws.com
      path: /
      """
    }
  }
  triggers {
    eventTrigger jmespathQuery("""event=='${projectId}'""")
  }
  environment {
    ARTIFACTORY_MAVEN=credentials("artifactory-maven")
    JFROG_CLI_OFFER_CONFIG=false
    NFS_REPO_LOCATION="/home/jenkins/git/multirepository-cache.git"
  }
  options {
    skipDefaultCheckout true
  }
  stages {
    stage("Build Prep") {
      steps {
        dir("${subdirectory}") {
          container("sbt") {
            sh """
               #sleep 6000
               #find /home/jenkins/git/multirepository-cache.git -type f
               git --version
               git init ${WORKSPACE}/${subdirectory}
               git fetch --tags --progress ${NFS_REPO_LOCATION} +refs/heads/*:refs/remotes/origin/*
               git config remote.origin.url ${NFS_REPO_LOCATION}
               git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/*
               git config remote.origin.url ${NFS_REPO_LOCATION}
               git fetch --tags --progress ${NFS_REPO_LOCATION} +refs/heads/*:refs/remotes/origin/*
               git rev-parse refs/remotes/origin/master^{commit}
               git rev-parse refs/remotes/origin/origin/master^{commit}
               git config core.sparsecheckout
               git checkout -f master
            """
          
//          checkout([$class: 'GitSCM',
//            branches: scm.branches,
//            extensions: [[$class: 'CloneOption', honorRefspec: true, noTags: true, reference: '/home/jenkins/git/multirepository-cache.git', shallow: true, depth: 1],
//                          [$class: 'LocalBranch', localBranch: branch],
//                          [$class: 'SubmoduleOption', recursiveSubmodules: true, reference: '/home/jenkins/git/multirepository-cache.git', shallow: true, depth: 3, trackingSubmodules: false]
//                        ],
//            gitTool: 'Default', // JGit in git client plugin does not provide fully compatible submodule support
//            userRemoteConfigs: [
//              [name: scm.userRemoteConfigs[0].name, url: scm.userRemoteConfigs[0].url, refspec: "+refs/heads/${branchName}:refs/remotes/origin/${branchName}"]
//            ]
//          ])
          }
        }
      }
    }
    stage("Build") {
      steps {
        dir("${subdirectory}") {
          container("sbt") {
            sh """
              sbt clean stage
            """
          }
          container("alpine-zip") {
            sh """
              ./eb-package.sh
            """
          }
          container("jfrog") {
            sh """
              jfrog rt upload --url http://34.82.23.119/artifactory/generic-local/ --user ${ARTIFACTORY_MAVEN_USR} --password ${ARTIFACTORY_MAVEN_PSW} "${projectId}*.zip" topbean/${projectId}/
            """
          }
        }
      }
    }
  }
}
